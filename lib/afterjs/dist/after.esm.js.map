{"version":3,"file":"after.esm.js","sources":["../src/asyncComponent.tsx","../src/NotFoundComponent.tsx","../src/utils.ts","../src/contexts/AfterContext.tsx","../src/Document.tsx","../src/ensureReady.ts","../src/loadInitialProps.tsx","../src/serializeData.tsx","../src/getAssets.ts","../src/loadStaticProps.ts","../src/After.tsx","../src/contexts/AfterRouterContext.tsx","../src/renderApp.tsx","../src/render.tsx","../src/renderStatic.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Module,\r\n  AsyncRouteComponentState,\r\n  AsyncRouteComponentType,\r\n  Ctx,\r\n} from './types';\r\n\r\n/**\r\n * Returns a new React component, ready to be instantiated.\r\n * Note the closure here protecting Component, and providing a unique\r\n * instance of Component to the static implementation of `load`.\r\n */\r\nexport function asyncComponent<Props>({\r\n  loader,\r\n  Placeholder,\r\n  chunkName,\r\n}: {\r\n  loader: () => Promise<Module<React.ComponentType<Props>>>;\r\n  Placeholder?: React.ComponentType<Props>;\r\n  chunkName?: string;\r\n}) {\r\n  // keep Component in a closure to avoid doing this stuff more than once\r\n  let Component: AsyncRouteComponentType<Props> | null = null;\r\n\r\n  return class AsyncRouteComponent extends React.Component<\r\n    Props,\r\n    AsyncRouteComponentState\r\n  > {\r\n    /**\r\n     * Static so that you can call load against an uninstantiated version of\r\n     * this component. This should only be called one time outside of the\r\n     * normal render path.\r\n     */\r\n    static load() {\r\n      return loader().then(ResolvedComponent => {\r\n        Component = ResolvedComponent.default || ResolvedComponent;\r\n      });\r\n    }\r\n\r\n    static getChunkName() {\r\n      return chunkName;\r\n    }\r\n\r\n    static getInitialProps(ctx: Ctx<any>) {\r\n      // Need to call the wrapped components getInitialProps if it exists\r\n      if (Component !== null) {\r\n        return Component.getInitialProps\r\n          ? Component.getInitialProps(ctx)\r\n          : Promise.resolve(null);\r\n      }\r\n    }\r\n\r\n    state = {\r\n      Component,\r\n    };\r\n\r\n    componentDidMount() {\r\n      AsyncRouteComponent.load().then(this.updateState);\r\n    }\r\n\r\n    updateState = () => {\r\n      // Only update state if we don't already have a reference to the\r\n      // component, this prevent unnecessary renders.\r\n      if (this.state.Component !== Component) {\r\n        this.setState({\r\n          Component,\r\n        });\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { Component: ComponentFromState } = this.state;\r\n\r\n      if (ComponentFromState) {\r\n        return <ComponentFromState {...this.props} />;\r\n      }\r\n\r\n      if (Placeholder) {\r\n        return <Placeholder {...this.props} />;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  };\r\n}\r\n","import { Route } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  const data = `The Page You Were Looking For Was Not Found`;\r\n  return <Route path='**' Component={() => data} />\r\n}\r\n\r\nexport default NotFound;\r\n","import {\r\n  AsyncRouteableComponent,\r\n  AsyncRouteComponentType,\r\n  AsyncRouteProps,\r\n  TransitionBehavior,\r\n} from './types';\r\nimport NotFoundComponent from './NotFoundComponent';\r\n\r\n/** @private is the given object a Function? */\r\nexport const isFunction = (obj: any) => 'function' === typeof obj;\r\n\r\n/** @private is the given object an Object? */\r\nexport const isObject = (obj: any) => obj !== null && typeof obj === 'object';\r\n\r\n/** @private is the given object/value a promise? */\r\nexport const isPromise = (value: any): boolean =>\r\n  isObject(value) && isFunction(value.then);\r\n\r\n/** @private we render on client? */\r\nexport const isDOM = (): boolean =>\r\n  typeof window === 'object' && typeof window.document === 'object';\r\n\r\n/** @private we render on server? */\r\nexport const isServer = (): boolean => !isDOM();\r\n\r\n/** @private Guard cluase to narrow the AsyncRouteableComponent union type on getInitialProps */\r\nexport function isAsyncComponent(\r\n  Component: AsyncRouteableComponent\r\n): Component is AsyncRouteComponentType<any> {\r\n  return (\r\n    (Component as AsyncRouteComponentType<any>).getInitialProps !== undefined\r\n  );\r\n}\r\n\r\n/** @private Guard cluase to narrow the AsyncRouteableComponent union type on load */\r\nexport function isLoadableComponent(\r\n  Component: AsyncRouteableComponent\r\n): Component is AsyncRouteComponentType<any> {\r\n  return (Component as AsyncRouteComponentType<any>).load !== undefined;\r\n}\r\n\r\n/** @private is given routes array have a 404 page?  */\r\nexport function is404ComponentAvailable(\r\n  routes: AsyncRouteProps<any>[]\r\n): AsyncRouteProps<any> | false {\r\n  return (\r\n    routes.find(route => ['**', '*', '', undefined].includes(route.path)) ||\r\n    false\r\n  );\r\n}\r\n\r\n/** @private Returns 404Component from given routes if component was not avaliable returns default 404component */\r\nexport function get404Component(\r\n  routes: AsyncRouteProps<any>[]\r\n): AsyncRouteableComponent<any> {\r\n  const match = is404ComponentAvailable(routes);\r\n  return match ? match.Component : NotFoundComponent;\r\n}\r\n\r\n/** @private Checks if 404Component is in routes, if it's not available add default 404 component */\r\nexport function getAllRoutes(\r\n  routes: AsyncRouteProps<any>[]\r\n): AsyncRouteProps<any>[] {\r\n  return is404ComponentAvailable(routes)\r\n    ? routes\r\n    : [...routes, { Component: NotFoundComponent }];\r\n}\r\n\r\n/** @private Checks if given string ends with \".js\" */\r\nexport function isJS(str: string) {\r\n  return str.endsWith('.js');\r\n}\r\n\r\n/** @private Checks if given transition type is instant */\r\nexport function isInstantTransition(transition: TransitionBehavior) {\r\n  return transition === \"instant\";\r\n}\r\n","import React from \"react\";\r\nimport { AfterContext } from \"../types\";\r\n\r\nexport const __AfterContext = React.createContext({} as AfterContext);\r\n\r\nexport const useAfterContext = () => {\r\n  return React.useContext(__AfterContext);\r\n};","import * as React from 'react';\r\nimport serialize from 'serialize-javascript';\r\nimport { isJS } from './utils';\r\nimport { DocumentProps, DocumentgetInitialProps } from './types';\r\nimport { useAfterContext } from './contexts/AfterContext';\r\n\r\nexport class Document extends React.Component<DocumentProps> {\r\n  static getInitialProps = async ({ renderPage }: DocumentgetInitialProps) => {\r\n    const page = await renderPage();\r\n    return { ...page };\r\n  };\r\n\r\n  render() {\r\n    const { helmet } = this.props;\r\n    // get attributes from React Helmet\r\n    const htmlAttrs = helmet.htmlAttributes.toComponent();\r\n    const bodyAttrs = helmet.bodyAttributes.toComponent();\r\n\r\n    return (\r\n      <html {...htmlAttrs}>\r\n        <head>\r\n          <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n          <meta charSet=\"utf-8\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          {helmet.title.toComponent()}\r\n          {helmet.meta.toComponent()}\r\n          {helmet.link.toComponent()}\r\n          <AfterStyles />\r\n        </head>\r\n        <body {...bodyAttrs}>\r\n          <AfterRoot />\r\n          <AfterData />\r\n          <AfterScripts />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nexport const AfterRoot: React.FC = () => {\r\n  const { html } = useAfterContext();\r\n  return <div id=\"root\" dangerouslySetInnerHTML={{ __html: html }} />;\r\n};\r\n\r\nexport const AfterData: React.FC<{ data?: object }> = ({ data }) => {\r\n  const { data: contextData } = useAfterContext();\r\n  return (\r\n    <script\r\n      defer\r\n      dangerouslySetInnerHTML={{\r\n        __html: `window.__SERVER_APP_STATE__ =  ${serialize({\r\n          ...(data || contextData),\r\n        })}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const AfterStyles: React.FC = () => {\r\n  const { assets, styles } = useAfterContext();\r\n  return (\r\n    <>\r\n      {assets.client.css && <link rel=\"stylesheet\" href={assets.client.css} />}\r\n      {styles.map(path => (\r\n        <link key={path} rel=\"stylesheet\" href={path} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const AfterScripts: React.FC = () => {\r\n  const { scripts, assets } = useAfterContext();\r\n  return (\r\n    <>\r\n      {scripts.filter(isJS).map(path => (\r\n        <script\r\n          key={path}\r\n          defer\r\n          type=\"text/javascript\"\r\n          src={path}\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      ))}\r\n      {assets.client.js && (\r\n        <script\r\n          type=\"text/javascript\"\r\n          src={assets.client.js}\r\n          defer\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { matchPath } from 'react-router-dom';\r\nimport { AsyncRouteProps } from './types';\r\nimport { isLoadableComponent } from './utils';\r\n\r\n/**\r\n * This helps us to make sure all the async code is loaded before rendering.\r\n */\r\nexport async function ensureReady(\r\n  routes: AsyncRouteProps[],\r\n  pathname?: string\r\n) {\r\n  await Promise.all(\r\n    routes.map(route => {\r\n      //const match = matchPath(pathname || window.location.pathname, route);\r\n      const match = matchPath({\r\n        path: route.path || \"*\",\r\n        caseSensitive: route.caseSensitive,\r\n        end: true\r\n      }, pathname || window.location.pathname)\r\n      if (\r\n        match &&\r\n        route &&\r\n        route.Component &&\r\n        isLoadableComponent(route.Component) &&\r\n        route.Component.load\r\n      ) {\r\n        return route.Component.load();\r\n      }\r\n      return undefined;\r\n    })\r\n  );\r\n\r\n  return Promise.resolve(\r\n    (window as any).__SERVER_APP_STATE__ as Promise<any>[]\r\n  );\r\n}\r\n","import { matchPath, RouteProps } from 'react-router-dom';\r\nimport { AsyncRouteProps, InitialProps, CtxBase } from './types';\r\nimport { isAsyncComponent } from './utils';\r\n\r\nexport async function loadInitialProps(\r\n  pathname: string,\r\n  routes: AsyncRouteProps[],\r\n  ctx: CtxBase\r\n): Promise<InitialProps> {\r\n  const promises: Promise<any>[] = [];\r\n\r\n  const matchedComponent = routes.find((route: RouteProps) => {\r\n    \r\n    // Step 1: Find the matched component using matchPath and pathname\r\n    //const match = matchPath(pathname, { ...route, path: route.path || '*' });\r\n    const match = matchPath({\r\n      path: route.path || \"*\",\r\n      caseSensitive: route.caseSensitive,\r\n      end: true\r\n    }, pathname)\r\n\r\n    // Step 2: Check if match is found: if match is not found, then 'match' is null\r\n    // If match is found and route has asyncComponent\r\n    // then load the component and call its getInitialProps\r\n    if (match && route.Component && isAsyncComponent(route.Component)) {\r\n      const component = route.Component;\r\n\r\n      promises.push(\r\n        component.load\r\n          ? component\r\n              .load()\r\n              .then(() => component.getInitialProps({ match, ...ctx }))\r\n          : component.getInitialProps({ match, ...ctx })\r\n      );\r\n    }\r\n\r\n    return !!match;\r\n  });\r\n\r\n  return {\r\n    match: matchedComponent,\r\n    data: (await Promise.all(promises))[0],\r\n  };\r\n}\r\n","import React from 'react';\r\nimport serialize from 'serialize-javascript';\r\n\r\ninterface SerializeData\r\n  extends React.DetailedHTMLProps<\r\n    React.ScriptHTMLAttributes<HTMLScriptElement>,\r\n    HTMLScriptElement\r\n  > {\r\n  name: string;\r\n  data: any;\r\n}\r\n\r\nexport const SerializeData: React.FC<SerializeData> = ({\r\n  data,\r\n  name,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <script\r\n      defer\r\n      {...props}\r\n      dangerouslySetInnerHTML={{\r\n        __html: `window._${name.toUpperCase()}_ = ${serialize(data)}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getSerializedData = (name: string, remove = true): any => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const data = window[`_${name.toUpperCase()}_`];\r\n  if (remove) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    delete window[`_${name.toUpperCase()}_`];\r\n  }\r\n  return data;\r\n};\r\n","import { GetAssetsParams } from './types';\r\nimport { isLoadableComponent } from './utils';\r\n// @ts-ignore\r\nimport logger from 'dazzle-dev-utils/logger';\r\n\r\nexport const errorMeesage = `all async routes must have a chunkName property with value of /* webpackChunkName: \"MyChunkName\" */ check your routes config or use babel-plugin-after`;\r\n\r\nexport function getAssets({ route, chunks }: GetAssetsParams) {\r\n  let scripts: string[] = [];\r\n  let styles: string[] = [];\r\n\r\n  // if route.component is not an asyncComponent\r\n  // it's assets (JS and CSS files) will go into the\r\n  // main bundle.js and bundle.css ...\r\n  if (!route || !isLoadableComponent(route.Component)) {\r\n    return { scripts, styles };\r\n  }\r\n\r\n  const chunkName = route.Component.getChunkName();\r\n\r\n  // if component was LoadableComponent and chunkName was undefined\r\n  // print an error message to console so Developer can fix it\r\n  // todo add link to documentation or show more useful error message\r\n  if (chunkName === undefined) {\r\n    logger.error(errorMeesage);\r\n    throw new Error();\r\n  }\r\n\r\n  // we look for component assets from chunks.json\r\n  if (chunks[chunkName] && chunks[chunkName].js) {\r\n    scripts = chunks[chunkName].js;\r\n  }\r\n\r\n  if (chunks[chunkName] && chunks[chunkName].css) {\r\n    styles = chunks[chunkName].css;\r\n  }\r\n\r\n  return { scripts, styles };\r\n}\r\n","import { InitialData } from './types';\r\n\r\nconst PAGE_DATA_FILE_NAME = 'page-data.json';\r\n\r\n// TODO: for better performance we can check\r\n// and see if matchedRoute component have getInitialProps or not\r\n// if the page dose not have a getInitalProps, then page-data.json is empty\r\n\r\n/**\r\n * reads data from pathname/page-data.json file using (fetch method) and then return it\r\n * @param routes\r\n * @param pathname\r\n */\r\nexport async function loadStaticProps(\r\n  pathname: string\r\n): Promise<{ data: InitialData }> {\r\n  // in ssg mode there is always a file called page-data.json next to the\r\n  // page path that we have in our app this page-data.json file includes inital data that we need\r\n  // to inject to our components before we render the component\r\n  // if pathname equals \"/\" we are going to fetch data for https://page-data.json path\r\n  // which is WRONG so we fallback to empty string for index page /page-data.json\r\n  const PAGE_DATA_FILE_PATH = `${\r\n    pathname === '/' ? '' : pathname\r\n  }/${PAGE_DATA_FILE_NAME}`;\r\n  return fetch(PAGE_DATA_FILE_PATH)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return { data: res };\r\n    });\r\n}\r\n","import { Navigate, Route, Routes, useLocation, useNavigationType, useParams } from \"react-router-dom\";\nimport { Location } from 'history';\nimport { AsyncRouteProps, CtxBase, InitialData, ServerAppState, TransitionBehavior } from \"./types\";\nimport React from \"react\";\nimport { get404Component, getAllRoutes, isInstantTransition } from \"./utils\";\nimport { loadStaticProps } from \"./loadStaticProps\";\nimport { loadInitialProps } from \"./loadInitialProps\";\n\nconst isClient = typeof window !== \"undefined\";\n\nexport type AfterpartyProps = {\n  data: ServerAppState;\n  routes: AsyncRouteProps[];\n  transitionBehavior: TransitionBehavior;\n  customParams?: { [key: string]: any };\n}\n\nexport type AfterpartyState = {\n  data?: InitialData;\n  previousLocation: Location | null;\n  currentLocation: Location;\n  isLoading: boolean;\n}\n\n// HACK: Since there will always be a single instance of After, this shouldn't cause problems\nconst store = (() => {\n  let s: { [key: string]: object } = {};\n  return {\n    set: (key: string, value: object) => {\n      if (!isClient) {\n        console.log(\"ALERT: TRIED TO SET STORE ON SERVER\");\n        return;\n      }\n      s[key] = value;\n    },\n    get: (key: string) => {\n      if (!isClient) {\n        console.log(\"ALERT: TRIED TO GET STORE ON SERVER\");\n        return null;\n      }\n      return s[key];\n    }\n  }\n})();\n\nconst getCachedData = (navigationAction: string, location: Location) => {\n  if (navigationAction !== 'POP') return null;\n  const cache = store.get(location.pathname) as any;\n  // TODO: TTL on cache\n  return cache && cache.key === location.key ? cache.data : null;\n}\n\nconst defaultNavigatigationDetector = (currentLoc: Location, nextLoc: Location) => {\n  return nextLoc.pathname !== currentLoc.pathname || currentLoc.search !== nextLoc.search\n}\n\nexport const After = (props: AfterpartyProps) => {\n  const navigationType = useNavigationType();\n  const currentLocation = useLocation();\n  const params = useParams();\n\n  const { data, routes, transitionBehavior = 'blocking', customParams } = props;\n  const [state, setState] = React.useState<AfterpartyState>({\n    data: data.initialData,\n    previousLocation: null,\n    currentLocation,\n    isLoading: false\n  });\n\n  const hasNavigated = defaultNavigatigationDetector(currentLocation, state.currentLocation);\n\n  const initialData = state.data as any;\n  const isInstantMode = isInstantTransition(transitionBehavior);\n  const match = { params, pathname: currentLocation.pathname };\n  const NotfoundComponent: React.ComponentType<any> = get404Component(routes);\n\n  // when hasNavigated changes, then update the state and cached data accordingly\n  React.useEffect(() => {\n    const previousLocation = state.currentLocation;\n\n    if (hasNavigated) {\n      const cachedData = getCachedData(navigationType, currentLocation);\n      const hasCachedData = !!cachedData;\n      // update the current state\n      setState({\n        ...state,\n        previousLocation: hasCachedData ? null : previousLocation,\n        currentLocation,\n        data: cachedData,\n        isLoading: hasCachedData ? false : true\n      });\n    }\n  }, [hasNavigated]);\n\n  // this useEffect is similar to componentDidUpdate and must be fired only after\n  // update to state has happened\n  // in above useEffect\n  React.useEffect(() => {\n    const hasNavigated = state.previousLocation !== null && defaultNavigatigationDetector(state.previousLocation, state.currentLocation);\n    if (hasNavigated) {\n      const isBlockedMode = !isInstantMode;\n      const { scrollToTop, ssg } = data.afterData;\n\n      const ctx: CtxBase = {\n        location: currentLocation,\n        scrollToTop: scrollToTop,\n        customParams,\n      }\n\n      // Only for page changes, prevent scroll up for anchor links\n      const isPageChanged: boolean =\n        !!state.previousLocation &&\n        (state.previousLocation.pathname !== currentLocation.pathname);\n      const isAllowedToScroll: boolean =\n        isPageChanged && scrollToTop.current === true;\n\n      // in instant mode, first we scroll to top then we fetch the data\n      if (isInstantMode && isAllowedToScroll) {\n        window.scrollTo(0, 0);\n      }\n\n      if (state.data === null) {\n        // in ssg mode we don't call component.getInitialProps\n        // instead we fetch the page-data.json file\n        const loadData = ssg ? loadStaticProps : loadInitialProps;\n\n        loadData(currentLocation.pathname, routes, ctx)\n          .then(res => res.data)\n          .then((data: InitialData) => {\n            // if user moved to a new page at the time we were fetching data\n            // for the previous page, we ignore data of the previous page\n            if (state.currentLocation !== currentLocation) return;\n\n            // in blocked mode, first we fetch the data and then we scroll to top\n            if (isBlockedMode && isAllowedToScroll) {\n              window.scrollTo(0, 0);\n            }\n\n            if (!!data) {\n              store.set(correctLocation.pathname, { key: currentLocation.key, data })\n            }\n            setState({ previousLocation: null, data, isLoading: false, currentLocation });\n          })\n          .catch((e: Error) => {\n            // @todo we should more cleverly handle errors???\n            console.log(e);\n            setState({ previousLocation: null, data: undefined, isLoading: false, currentLocation });\n          });\n      }\n    }\n  }, [state]);\n\n  const updateState = React.useCallback((data: any) => {\n    if (!!data) {\n      store.set(currentLocation.pathname, { key: currentLocation.key, data });\n    }\n    setState({ ...state, previousLocation: null, data, isLoading: false, currentLocation })\n  }, [state, currentLocation]);\n\n  // used to refetch data for current route -> basically call loadData once again\n  const refetch = React.useCallback(() => {\n    const { scrollToTop, ssg } = data.afterData;\n\n    const ctx: CtxBase = {\n      location: currentLocation,\n      scrollToTop: scrollToTop,\n      customParams,\n    }\n    setState({ ...state, isLoading: true });\n\n    // in ssg mode we don't call component.getInitialProps\n    // instead we fetch the page-data.json file\n    const loadData = ssg ? loadStaticProps : loadInitialProps;\n\n    loadData(currentLocation.pathname, routes, ctx)\n      .then(res => res.data)\n      .then((data: InitialData) => {\n        // if user moved to a new page at the time we were fetching data\n        // for the previous page, we ignore data of the previous page\n        if (state.currentLocation !== currentLocation) return;\n\n        if (!!data) {\n          store.set(correctLocation.pathname, { key: currentLocation.key, data })\n        }\n        setState({ previousLocation: null, data, isLoading: false, currentLocation });\n      })\n      .catch((e: Error) => {\n        // @todo we should more cleverly handle errors???\n        console.log(e);\n        setState({ ...state, previousLocation: null, isLoading: false, currentLocation });\n      });\n  }, [state, currentLocation, data]);\n\n  // when we are in the instant mode we want to pass the right location prop\n  // to the <Route /> otherwise it will render previous matched component\n  const correctLocation = isInstantMode\n    ? currentLocation\n    : (state.previousLocation ? state.previousLocation : currentLocation);\n\n  return (\n    <Routes location={correctLocation}>\n      {initialData?.statusCode === 404 && (\n        <Route Component={NotfoundComponent} path={currentLocation.pathname} />\n      )}\n      {initialData?.redirectTo && (\n        <Navigate to={initialData.redirectTo} />\n      )}\n      {getAllRoutes(routes).map((route, index) => {\n        const Component = route.Component;\n        return (\n          <Route\n            path={route.path}\n            key={`route--${index}`}\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t{...initialData}\n\t\t\t\t\t\t\t\tmatch={match}\n\t\t\t\t\t\t\t\tlocation={currentLocation}\n\t\t\t\t\t\t\t\tisLoading={state.isLoading}\n\t\t\t\t\t\t\t\t// custom props\n\t\t\t\t\t\t\t\tupdateState={updateState}\n\t\t\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n            // Component={() => {\n            //   return (\n            //     <Component\n            //       {...initialData}\n            //       match={match}\n            //       location={currentLocation}\n            //       isLoading={state.isLoading}\n            //       // custom props\n            //       updateState={updateState}\n            //       refetch={refetch}\n            //     />\n            //   )\n            // }}\n          />\n        )\n      })}\n    </Routes>\n  )\n\n}\n\nexport default After;\n","import React from \"react\";\r\nimport { AfterRouterContext } from \"../types\";\r\n\r\nexport const __AfterRouterContext = React.createContext({} as AfterRouterContext);\r\n\r\nexport const useAfterRouterContext = () => {\r\n  return React.useContext(__AfterRouterContext);\r\n}","import * as React from 'react';\r\nimport * as ReactDOMServer from 'react-dom/server';\r\nimport { Helmet } from 'react-helmet';\r\nimport { StaticRouter } from 'react-router-dom/server';\r\nimport { matchPath } from 'react-router-dom';\r\n\r\nimport { Document as DefaultDoc } from './Document';\r\nimport After from './After';\r\nimport { loadInitialProps } from './loadInitialProps';\r\nimport * as utils from './utils';\r\n\r\nimport {\r\n  AfterRenderAppOptions,\r\n  AfterClientData,\r\n  CtxBase,\r\n  AsyncRouteProps,\r\n  RedirectWithStatuCode,\r\n  ServerAppState,\r\n  RenderResult,\r\n  DocumentProps,\r\n  RenderPageResult,\r\n  AfterRouterContext,\r\n} from './types';\r\n\r\nimport { getAssets } from './getAssets';\r\nimport { __AfterContext } from './contexts/AfterContext';\r\nimport { __AfterRouterContext } from './contexts/AfterRouterContext';\r\n\r\nconst modPageFn = function <Props>(Page: React.ComponentType<Props>) {\r\n  return function RenderAfter(props: Props) {\r\n    //@ts-ignore\r\n    return <Page {...props} />;\r\n  };\r\n};\r\n\r\n/**\r\n * The customRenderer parameter is a (potentially async) function that can be set to return\r\n * more than just a rendered string.\r\n * If present, it will be used instead of the default ReactDOMServer renderToString function.\r\n * It has to return an object of shape { html, ... }, in which html will be used as the rendered string\r\n * Other props will be also pass to the Document component\r\n */\r\nexport async function renderApp<T>(\r\n  options: AfterRenderAppOptions<T>\r\n): Promise<RenderResult> {\r\n  const {\r\n    req,\r\n    res,\r\n    routes: pureRoutes,\r\n    assets,\r\n    document: Document,\r\n    customRenderer,\r\n    chunks,\r\n    scrollToTop = true,\r\n    ssg = false,\r\n    customParams = {},\r\n  } = options;\r\n  const autoScrollRef: React.Ref<boolean> = { current: scrollToTop };\r\n\r\n  // check and see if 404 page is in list of app routes\r\n  // if there are no 404 page in routes array add After.js default 404 page\r\n  const routes: AsyncRouteProps[] = utils.getAllRoutes(pureRoutes);\r\n\r\n  const ctx: CtxBase = {\r\n    req,\r\n    res,\r\n    scrollToTop: autoScrollRef,\r\n    customParams,\r\n  };\r\n  \r\n  const fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;\r\n  const pathname = (new URL(fullUrl)).pathname;\r\n  //const pathname: string = url.parse(req.url).pathname as string;\r\n\r\n  // finds related component for the current path (request url)\r\n  // and calls component.getInitialProps({ match,...ctx })\r\n  const { match, data: initialData } = await loadInitialProps(\r\n    pathname,\r\n    routes,\r\n    ctx\r\n  );\r\n\r\n  // AfterRouterContextProvider context object contains information about statusCode and target <Navigate /> component target url (if any)\r\n  const context: AfterRouterContext = {};\r\n\r\n  // here we will check result of the getInitialProps\r\n  // and see if it contains redirectTo or statusCode properties\r\n  // we will mutate context if we got redirectTo or statusCode in initialData\r\n  if (initialData) {\r\n    const { redirectTo, statusCode } = initialData as RedirectWithStatuCode;\r\n\r\n    if (statusCode) {\r\n      context.statusCode = statusCode;\r\n    }\r\n\r\n    // if we got redirectTo from getInitalProps\r\n    // we don't waste server resources by rendering the react tree\r\n    // so we return early\r\n    if (redirectTo) {\r\n      return {\r\n        html: '',\r\n        data: initialData,\r\n        redirect: redirectTo,\r\n        statusCode: statusCode || 302,\r\n      };\r\n    }\r\n  }\r\n\r\n  // this object containes data that <After /> will use on client-side\r\n  const afterData: AfterClientData = {\r\n    scrollToTop: autoScrollRef,\r\n  };\r\n\r\n  // well, we will save a few bits in this way\r\n  if (ssg) {\r\n    afterData.ssg = true;\r\n  }\r\n\r\n  // result of getInitialProps + <After /> props\r\n  const data: ServerAppState = {\r\n    initialData,\r\n    afterData,\r\n  };\r\n\r\n  const renderPage = async (fn = modPageFn) => {\r\n    // By default, we keep ReactDOMServer synchronous renderToString function\r\n    const defaultRenderer = (element: React.ReactElement<T>) => ({\r\n      html: ReactDOMServer.renderToString(element),\r\n    });\r\n    const renderer = customRenderer || defaultRenderer;\r\n    const asyncOrSyncRender = renderer(\r\n      <__AfterRouterContext.Provider value={context}>\r\n        <StaticRouter location={req.url}>\r\n          {fn(After)({ routes, data, transitionBehavior: 'blocking', customParams })}\r\n        </StaticRouter>\r\n      </__AfterRouterContext.Provider>\r\n    );\r\n\r\n    const renderedContent = await asyncOrSyncRender;\r\n    const helmet = Helmet.renderStatic();\r\n\r\n    return { helmet, ...renderedContent };\r\n  };\r\n\r\n  const Doc = Document || DefaultDoc;\r\n\r\n  // get css and javascript file paths for the async componetns\r\n  const { scripts, styles } = getAssets({ route: match, chunks });\r\n\r\n  //const reactRouterMatch = matchPath(req.url, match as RouteProps);\r\n  const reactRouterMatch = matchPath({\r\n    path: match ? (match.path || \"*\") : \"*\",\r\n    caseSensitive: match ? match.caseSensitive : false,\r\n    end: true\r\n  }, pathname)\r\n\r\n  // Docuement.getInitialProps() will call renderPage()\r\n  // and renderPage() will call ReactDOMServer.renderToString\r\n  // so we get our React Tree html from this function\r\n  const { html, ...docProps } = await Doc.getInitialProps({\r\n    req,\r\n    res,\r\n    assets,\r\n    renderPage,\r\n    data,\r\n    helmet: Helmet.renderStatic(),\r\n    match: reactRouterMatch,\r\n    scripts,\r\n    styles,\r\n    scrollToTop: autoScrollRef,\r\n    customParams,\r\n  });\r\n\r\n  // if we got a <Redirect /> in during render of the react tree\r\n  // we redirect the user and we don't waste server resources\r\n  if (context.url) {\r\n    return {\r\n      html: '',\r\n      data: initialData,\r\n      redirect: context.url,\r\n      statusCode: context.statusCode || 302,\r\n    };\r\n  }\r\n\r\n  const props: DocumentProps<RenderPageResult> = {\r\n    assets,\r\n    data,\r\n    scripts,\r\n    styles,\r\n    match: reactRouterMatch,\r\n    customParams,\r\n    ...docProps,\r\n    html,\r\n  };\r\n\r\n  // we render <Document /> which is our app shell\r\n  const doc = ReactDOMServer.renderToStaticMarkup(\r\n    <__AfterContext.Provider value={props}>\r\n      <Doc {...props} />\r\n    </__AfterContext.Provider>\r\n  );\r\n\r\n  const page = `<!doctype html>${doc}`;\r\n\r\n  return {\r\n    html: page,\r\n    data: initialData,\r\n    redirect: '',\r\n    statusCode: context.statusCode || 200,\r\n  };\r\n}\r\n","import { renderApp } from './renderApp';\r\nimport { AfterRenderOptions } from './types';\r\n\r\nexport const render = async <T extends any>(\r\n  params: Omit<AfterRenderOptions<T>, 'ssg'>\r\n) => {\r\n  const { res } = params;\r\n  const { redirect, statusCode, html } = await renderApp({\r\n    ...params,\r\n    ssg: false,\r\n  });\r\n\r\n  if (redirect) {\r\n    res.redirect(statusCode, redirect);\r\n  }\r\n\r\n  res.status(statusCode);\r\n\r\n  return html;\r\n};\r\n","import { renderApp } from './renderApp';\r\nimport { AfterRenderStaticOptions } from './types';\r\n\r\nexport const renderStatic = async <T extends any>(\r\n  params: AfterRenderStaticOptions<T>\r\n) => {\r\n  const { redirect, html, data } = await renderApp({ ...params, ssg: true });\r\n\r\n  if (redirect) {\r\n    const { url } = params.req;\r\n    throw new Error(\r\n      `You are not allowed to use redirect in ssg mode, URL: ${url}`\r\n    );\r\n  }\r\n\r\n  return { html, data };\r\n};\r\n"],"names":["asyncComponent","_ref","loader","Placeholder","chunkName","Component","_React$Component","AsyncRouteComponent","_this","state","setState","_inheritsLoose","load","then","ResolvedComponent","getChunkName","getInitialProps","ctx","Promise","resolve","_proto","prototype","componentDidMount","updateState","render","ComponentFromState","React","props","NotFound","data","Route","path","isAsyncComponent","undefined","isLoadableComponent","is404ComponentAvailable","routes","find","route","includes","get404Component","match","NotFoundComponent","getAllRoutes","concat","isJS","str","endsWith","isInstantTransition","transition","__AfterContext","createContext","useAfterContext","useContext","Document","apply","arguments","helmet","htmlAttrs","htmlAttributes","toComponent","bodyAttrs","bodyAttributes","httpEquiv","content","charSet","name","title","meta","link","AfterStyles","AfterRoot","AfterData","AfterScripts","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","renderPage","page","wrap","_callee$","_context","prev","next","sent","abrupt","_extends","stop","_x","_useAfterContext","html","id","dangerouslySetInnerHTML","__html","_ref3","_useAfterContext2","contextData","defer","serialize","_useAfterContext3","assets","styles","client","css","rel","href","map","key","_useAfterContext4","scripts","filter","type","src","crossOrigin","js","ensureReady","_x2","_ensureReady","pathname","all","matchPath","caseSensitive","end","window","location","__SERVER_APP_STATE__","loadInitialProps","_x3","_loadInitialProps","promises","matchedComponent","component","push","t0","t1","SerializeData","_objectWithoutPropertiesLoose","_excluded","toUpperCase","getSerializedData","remove","errorMeesage","getAssets","chunks","logger","error","Error","PAGE_DATA_FILE_NAME","loadStaticProps","_loadStaticProps","PAGE_DATA_FILE_PATH","fetch","res","json","isClient","store","s","set","value","console","log","get","getCachedData","navigationAction","cache","defaultNavigatigationDetector","currentLoc","nextLoc","search","After","navigationType","useNavigationType","currentLocation","useLocation","params","useParams","_props$transitionBeha","transitionBehavior","customParams","_React$useState","useState","initialData","previousLocation","isLoading","hasNavigated","isInstantMode","NotfoundComponent","useEffect","cachedData","hasCachedData","isBlockedMode","_data$afterData","afterData","scrollToTop","ssg","isPageChanged","isAllowedToScroll","current","scrollTo","loadData","correctLocation","e","useCallback","refetch","_data$afterData2","Routes","statusCode","redirectTo","Navigate","to","index","element","__AfterRouterContext","useAfterRouterContext","modPageFn","Page","RenderAfter","renderApp","_renderApp","_callee2","options","req","pureRoutes","customRenderer","_options$scrollToTop","_options$ssg","_options$customParams","autoScrollRef","fullUrl","_yield$loadInitialPro","context","Doc","_getAssets","reactRouterMatch","_yield$Doc$getInitial","docProps","doc","_callee2$","_context2","document","utils","protocol","originalUrl","URL","redirect","fn","defaultRenderer","renderer","asyncOrSyncRender","renderedContent","ReactDOMServer","Provider","StaticRouter","url","Helmet","renderStatic","DefaultDoc","_yield$renderApp","status"],"mappings":"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"}